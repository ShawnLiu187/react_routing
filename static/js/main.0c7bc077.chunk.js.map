{"version":3,"sources":["components/Header.js","components/Item.js","components/ListContainer.js","components/Users.js","components/NotFound.js","components/ItemTodo.js","components/HeaderTodo.js","components/ToDos.js","components/ItemPost.js","components/Posts.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Item","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","goToToDo","props","todoRoute","player","id","goToPost","postRoute","name","email","onClick","defaultProps","position","ListContainer","list","map","item","Item_Item","key","Users","finishLoading","setTimeout","setState","loading","goToToDos","userID","history","push","concat","goToPosts","buildList","data","console","log","JSON","stringify","error","state","_this2","fetch","then","response","json","catch","err","react","Header_Header","ListContainer_ListContainer","Home","ItemTodo","todo","title","completed","userId","HeaderTodo","goToUsers","userRoute","header","Todos","url","match","params","_this3","HeaderTodo_HeaderTodo","ItemTodo_ItemTodo","ItemPost","post","body","Posts","ItemPost_ItemPost","App","HashRouter","Switch","Route","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0WAGqBA,0LAMb,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAClBH,EAAAC,EAAAC,cAAA,2CARwBE,cCCfC,2BACjB,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAsBJI,SAAW,WACPP,EAAKQ,MAAMC,UAAUT,EAAKQ,MAAME,OAAOC,KAxB9BX,EA2BbY,SAAW,WACPZ,EAAKQ,MAAMK,UAAUb,EAAKQ,MAAME,OAAOC,KA5B9BX,wEAgCT,OACIN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,UAAKO,KAAKK,MAAME,OAAOI,MACvBpB,EAAAC,EAAAC,cAAA,SAAIO,KAAKK,MAAME,OAAOK,QAKtBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,UAAQoB,QAASb,KAAKI,SAAUV,UAAU,sBAA1C,SACAH,EAAAC,EAAAC,cAAA,UAAQoB,QAASb,KAAKS,SAAUf,UAAU,sBAA1C,kBA7CsBC,cAgElCC,EAAKkB,aAAe,CAChBP,OAAQ,CACJI,KAAM,UACNI,SAAU,YACVP,GAAI,QCnESQ,cACjB,SAAAA,IAAc,OAAAlB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,GAAAlB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,6EAwBN,IAAAH,EAAAG,KACJ,OACIT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACbM,KAAKK,MAAMY,KAAKC,IAAI,SAACC,GAAD,OACrB5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAMC,IAAKF,EAAKX,GAAID,OAAQY,EAAMb,UAAWT,EAAKQ,MAAMC,UAAWI,UAAWb,EAAKQ,MAAMK,sBA7B1Df,aCsD5B2B,qBArDb,SAAAA,IAAa,IAAAzB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,IACXzB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwB,GAAAnB,KAAAH,QAkBFuB,cAAgB,WAEbC,WAAW,WAAK3B,EAAK4B,SAAS,CAACC,SAAQ,KAAU,MArBvC7B,EAwBb8B,UAAY,SAACC,GACX/B,EAAKQ,MAAMwB,QAAQC,KAAnB,UAAAC,OAAkCH,KAzBvB/B,EA4BbmC,UAAY,SAACJ,GACX/B,EAAKQ,MAAMwB,QAAQC,KAAnB,UAAAC,OAAkCH,KA7BvB/B,EAgCboC,UAAW,SAACC,GACVC,QAAQC,IAAIC,KAAKC,UAAUJ,GAAO,KAAM,MACxCrC,EAAK4B,SAAS,CACVR,KAAMiB,EACNK,MAAO,OAEX1C,EAAK0B,iBApCL1B,EAAK2C,MAAQ,CACXvB,KAAM,GACNS,SAAS,EACTa,MAAO,MALE1C,mFAQM,IAAA4C,EAAAzC,KAEb0C,MADM,+CAELC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK3C,KAAKiC,WACVa,MAAM,SAAAC,GACHN,EAAKhB,SAAS,CAACc,MAAMQ,IACrBN,EAAKhB,SAAS,CAACC,SAAQ,uCA2B/B,OACInC,EAAAC,EAAAC,cAACuD,EAAA,SAAD,KACEzD,EAAAC,EAAAC,cAACwD,EAAD,MACCjD,KAAKwC,MAAMd,SAAYnC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,qBACtBM,KAAKwC,MAAMd,SAAYnC,EAAAC,EAAAC,cAACyD,EAAD,CAAejC,KAAMjB,KAAKwC,MAAMvB,KAAMX,UAAWN,KAAK2B,UAAWjB,UAAWV,KAAKgC,oBA/ChGrC,cCHCwD,mLAGb,OACI5D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0DALkBE,aCCbyD,0LAIb,OACI7D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,UAAKO,KAAKK,MAAMgD,KAAKC,OAErB/D,EAAAC,EAAAC,cAAA,KAAGC,UAAWM,KAAKK,MAAMgD,KAAKE,UAAU,QAAQ,OAAhD,gBAAqEvD,KAAKK,MAAMgD,KAAKE,UAAU,YAAY,YAK3GhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,oBAAYO,KAAKK,MAAMgD,KAAKG,iBAhBF7D,cCAjB8D,6MAIjBC,UAAY,WACR7D,EAAKQ,MAAMsD,qFAIX,OACIpE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAClBH,EAAAC,EAAAC,cAAA,KAAGoB,QAASb,KAAK0D,UAAWhE,UAAU,WAAtC,QACAH,EAAAC,EAAAC,cAAA,6BAAqBO,KAAKK,MAAMuD,gBAZJjE,aC4EzBkE,cA/Db,SAAAA,IAAa,IAAAhE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACXhE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,QAoBFuB,cAAgB,WAEbC,WAAW,WAAK3B,EAAK4B,SAAS,CAACC,SAAQ,KAAU,MAvBvC7B,EA0BboC,UAAW,SAACC,GACVC,QAAQC,IAAIC,KAAKC,UAAUJ,GAAO,KAAM,MACxCrC,EAAK4B,SAAS,CACVR,KAAMiB,EACNK,MAAO,OAEX1C,EAAK0B,iBAhCM1B,EAmCf6D,UAAY,WACV7D,EAAKQ,MAAMwB,QAAQC,KAAK,WAlCtBjC,EAAK2C,MAAQ,CACXvB,KAAM,GACNS,SAAS,EACTa,MAAO,MALE1C,mFAQM,IAAA4C,EAAAzC,KACb8D,EAAG,qDAAA/B,OAAwD/B,KAAKK,MAAM0D,MAAMC,OAAOpC,QACnFc,MAAMoB,GACLnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK3C,KAAKiC,WACVa,MAAM,SAAAC,GACHN,EAAKhB,SAAS,CAACc,MAAMQ,IACrBN,EAAKhB,SAAS,CAACC,SAAQ,MAG3BS,QAAQC,IAAIpC,KAAKK,MAAM0D,MAAMC,OAAOpC,yCAsBjC,IAAAqC,EAAAjE,KACP,OACIT,EAAAC,EAAAC,cAACuD,EAAA,SAAD,KACEzD,EAAAC,EAAAC,cAACyE,EAAD,CAAYP,UAAW3D,KAAK0D,UAAWE,OAAO,YAE7C5D,KAAKwC,MAAMd,SAAYnC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,uBAEtBM,KAAKwC,MAAMd,UAAY1B,KAAKK,MAAM0D,MAAMC,OAAOpC,QAAWrC,EAAAC,EAAAC,cAAA,uCAE1DO,KAAKwC,MAAMd,SAAW1B,KAAKK,MAAM0D,MAAMC,OAAOpC,QAC9CrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACbM,KAAKwC,MAAMvB,KAAKC,IAAI,SAACC,GAAD,OACrB5B,EAAAC,EAAAC,cAAC0E,EAAD,CAAU9C,IAAKF,EAAKX,GAAI6C,KAAMlC,EAAMwC,UAAWM,EAAKP,uBArD5C/D,aCZCyE,mLAEb,OACI7E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,UAAKO,KAAKK,MAAMgE,KAAKf,OAErB/D,EAAAC,EAAAC,cAAA,SAAIO,KAAKK,MAAMgE,KAAKC,OAKpB/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,oBAAYO,KAAKK,MAAMgE,KAAKb,iBAdF7D,iBC4EvB4E,cA/Db,SAAAA,IAAa,IAAA1E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IACX1E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyE,GAAApE,KAAAH,QAoBFuB,cAAgB,WAEbC,WAAW,WAAK3B,EAAK4B,SAAS,CAACC,SAAQ,KAAU,MAvBvC7B,EA0BboC,UAAW,SAACC,GACVC,QAAQC,IAAIC,KAAKC,UAAUJ,GAAO,KAAM,MACxCrC,EAAK4B,SAAS,CACVR,KAAMiB,EACNK,MAAO,OAEX1C,EAAK0B,iBAhCM1B,EAmCf6D,UAAY,WACV7D,EAAKQ,MAAMwB,QAAQC,KAAK,WAlCtBjC,EAAK2C,MAAQ,CACXvB,KAAM,GACNS,SAAS,EACTa,MAAO,MALE1C,mFAQM,IAAA4C,EAAAzC,KACb8D,EAAG,qDAAA/B,OAAwD/B,KAAKK,MAAM0D,MAAMC,OAAOpC,QACnFc,MAAMoB,GACLnB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK3C,KAAKiC,WACVa,MAAM,SAAAC,GACHN,EAAKhB,SAAS,CAACc,MAAMQ,IACrBN,EAAKhB,SAAS,CAACC,SAAQ,MAG3BS,QAAQC,IAAIpC,KAAKK,MAAM0D,MAAMC,OAAOpC,yCAuBxC,OACIrC,EAAAC,EAAAC,cAACuD,EAAA,SAAD,KACEzD,EAAAC,EAAAC,cAACyE,EAAD,CAAYP,UAAW3D,KAAK0D,UAAWE,OAAO,UAE7C5D,KAAKwC,MAAMd,SAAYnC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,uBAEtBM,KAAKwC,MAAMd,UAAY1B,KAAKK,MAAM0D,MAAMC,OAAOpC,QAAWrC,EAAAC,EAAAC,cAAA,uCAE1DO,KAAKwC,MAAMd,SAAW1B,KAAKK,MAAM0D,MAAMC,OAAOpC,QAC9CrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACbM,KAAKwC,MAAMvB,KAAKC,IAAI,SAACC,GAAD,OACrB5B,EAAAC,EAAAC,cAAC+E,EAAD,CAAUnD,IAAKF,EAAKX,GAAI6D,KAAMlD,eArDtBxB,aCcL8E,cArBb,SAAAA,IAAc,OAAA3E,OAAAC,EAAA,EAAAD,CAAAE,KAAAyE,GAAA3E,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2E,GAAAtE,KAAAH,6EAKZ,OACIT,EAAAC,EAAAC,cAACiF,EAAA,EAAD,KACAnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzD,IACjC/B,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWzD,IACtC/B,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWlB,IACvCtE,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,UAAWlB,IACxCtE,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWR,IACvChF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,UAAWR,IACxChF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOG,UAAWC,aAfVrF,aCKEsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrB,MACvB,2DCZNsB,IAASC,OAAO/F,EAAAC,EAAAC,cAAC8F,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjD,KAAK,SAAAkD,GACjCA,EAAaC","file":"static/js/main.0c7bc077.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Header.css';\n\nexport default class Header extends Component{\n    // constructor(){\n    //     super()\n    // }\n\n    render(){\n        return(\n            <header className=\"app-header\">\n            <h1>React Project - Users</h1>\n            </header>\n        )\n    }\n}","import React, {Component} from 'react';\nimport './Item.css';\nimport PropTypes from 'prop-types'\n\nexport default class Item extends Component{\n    constructor(){\n        super()\n        // this.state = {\n        //     active: false\n        // }\n        // this.nameRef = React.createRef();\n        // this.positionRef = React.createRef();\n    }\n\n    // editSave = (ev) => {\n    //     this.state.active?this.setState({active: false}):this.setState({active: true});\n    // }\n\n    // savePlayer = () => {\n    //             this.editSave();\n    //             this.props.player.name = this.nameRef.current.value;\n    //             this.props.player.position = this.positionRef.current.value;\n    // }\n\n    // waivePlayer = () => {\n    //     this.props.deletePlayer(this.props.player.id);\n    // }\n\n    goToToDo = () => {\n        this.props.todoRoute(this.props.player.id)\n    }\n\n    goToPost = () => {\n        this.props.postRoute(this.props.player.id)\n    }\n\n    render(){\n        return(\n            <li className=\"item\">\n\n            <div className=\"item-container\">\n            <h1>{this.props.player.name}</h1>\n            <p>{this.props.player.email}</p>\n            {/* <input className={this.state.active?\"input-field\":\"hide\"} defaultValue={this.props.player.name} ref={this.nameRef}></input>\n            <input className={this.state.active?\"input-field\":\"hide\"} defaultValue={this.props.player.position} ref={this.positionRef}></input> */}\n            </div>\n\n            <div className=\"button-container\">\n            <button onClick={this.goToToDo} className=\"button button-edit\">ToDos</button>\n            <button onClick={this.goToPost} className=\"button button-edit\">Posts</button>\n            {/* <button onClick={this.savePlayer} className={this.state.active?\"button button-save\":\"hide\" }>Save</button> */}\n            </div>\n\n            </li>\n\n            \n        )\n    }\n}\n\nItem.propTypes = {\n    player: PropTypes.shape({\n        name: PropTypes.string,\n        position: PropTypes.string,\n        id: PropTypes.number.isRequired\n    })\n}\n\nItem.defaultProps = {\n    player: {\n        name: \"Unknown\",\n        position: \"Sixth Man\",\n        id: 0\n    }\n}","import React, {Component} from 'react';\nimport './ListContainer.css';\nimport Item from './Item';\n\n\nexport default class ListContainer extends Component{\n    constructor(){\n        super()\n        // this.state = {players: [\n        //     {id: 1, name: \"Guo Ailun\", position: \"Point Guard\"},\n        //     {id: 2, name: \"Yi Jianlian\", position: \"Power Foward\"},\n        //     {id: 3, name: \"Yao Ming\", position: \"Center\"}\n        // ]}\n    }\n\n    // deletePlayer = (playerId) => {\n    //     let newPlayers = this.state.players.filter((item) => {\n    //         if(playerId != item.id){\n    //             return true;\n    //         }\n    //     });\n    //     this.setState({players: newPlayers});\n    // }\n\n    // addPlayer = (newPlayer) => {\n    //     let newPlayers = this.state.players;\n    //     newPlayers.push(newPlayer);\n    //     this.setState({players: newPlayers});\n    // }\n\n    render(){\n        return(\n            <ul className=\"split list-container\">\n            {this.props.list.map((item) => (\n            <Item key={item.id} player={item} todoRoute={this.props.todoRoute} postRoute={this.props.postRoute}/>\n            ))}\n            </ul>\n        )\n    }\n}","import React, { Component, Fragment } from 'react';\nimport Header from './Header';\nimport ListContainer from './ListContainer';\nimport './Users.css'\n\nclass Users extends Component {\n  constructor(){\n    super()\n    this.state = {\n      list: [],\n      loading: true,\n      error: null}\n}\n\n  componentDidMount(){\n    let url = 'https://jsonplaceholder.typicode.com/users/';\n        fetch(url)\n        .then(response => response.json())\n        .then(this.buildList)\n        .catch(err => {\n            this.setState({error:err});\n            this.setState({loading:false})\n        })\n  }\n\n  finishLoading = () => {\n    //this.setState({loading:false});\n     setTimeout(()=>{this.setState({loading:false})}, 1000)\n  }\n\n  goToToDos = (userID) => {\n    this.props.history.push(`/todos/${userID}`);\n  }\n\n  goToPosts = (userID) => {\n    this.props.history.push(`/posts/${userID}`);\n  }\n\n  buildList =(data)=>{\n    console.log(JSON.stringify(data), null, '\\n');\n    this.setState({\n        list: data,\n        error: null\n    })\n    this.finishLoading()\n}\n\n  render() {\n    return (\n        <Fragment>\n          <Header />\n          {this.state.loading && (<h1 className=\"loading\">Loading Users...</h1>)}\n          {!this.state.loading && (<ListContainer list={this.state.list} todoRoute={this.goToToDos} postRoute={this.goToPosts}/>)}\n          \n        </Fragment>\n    );\n  }\n}\n\nexport default Users;\n","import React, {Component} from 'react';\n\nexport default class Home extends Component{\n\n    render(){\n        return(\n            <div>\n                <h1>Path does not exist in this timeline</h1>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport './ItemTodo.css';\n\nexport default class ItemTodo extends Component{\n\n\n    render(){\n        return(\n            <li className=\"itemTodo\">\n\n            <div className=\"todo-container\">\n            <h1>{this.props.todo.title}</h1>\n            {/* <h1>{this.props.todo.title}</h1> */}\n            <p className={this.props.todo.completed?\"green\":\"red\"}>Task Status: {this.props.todo.completed?\"Completed\":\"Pending\"}</p>\n            {/* <input className={this.state.active?\"input-field\":\"hide\"} defaultValue={this.props.player.name} ref={this.nameRef}></input>\n            <input className={this.state.active?\"input-field\":\"hide\"} defaultValue={this.props.player.position} ref={this.positionRef}></input> */}\n            </div>\n\n            <div className=\"id-container\">\n            <p>UserID: {this.props.todo.userId}</p>\n            {/* <button onClick={this.goToHome} className=\"button button-edit\">Home</button>\n            <button onClick={this.waivePlayer} className=\"button button-edit\">Photo</button> */}\n            {/* <button onClick={this.savePlayer} className={this.state.active?\"button button-save\":\"hide\" }>Save</button> */}\n            </div>\n\n            </li>\n\n            \n        )\n    }\n}","import React, {Component} from 'react';\nimport './Header.css';\n\nexport default class HeaderTodo extends Component{\n    // constructor(){\n    //     super()\n    // }\n    goToUsers = () => {\n        this.props.userRoute();\n    }\n\n    render(){\n        return(\n            <header className=\"app-header\">\n            <p onClick={this.goToUsers} className=\"backBtn\">Back</p>\n            <h1>React Project - {this.props.header}</h1>\n            </header>\n        )\n    }\n}","import React, { Component, Fragment } from 'react';\nimport \"./Header.css\"\nimport './ListContainer.css'\nimport ItemTodo from './ItemTodo'\nimport HeaderTodo from './HeaderTodo'\n\n// function Header() {\n//     return(\n//         <header className=\"app-header\">\n//         <p className=\"backBtn\">Back</p>\n//         <h1>React Project - ToDo(s)</h1>\n//         </header>\n//     )\n// }\n\nclass Todos extends Component {\n  constructor(){\n    super()\n    this.state = {\n      list: [],\n      loading: true,\n      error: null}\n}\n\n  componentDidMount(){\n    let url = `https://jsonplaceholder.typicode.com/todos?userId=${this.props.match.params.userID}`;\n        fetch(url)\n        .then(response => response.json())\n        .then(this.buildList)\n        .catch(err => {\n            this.setState({error:err});\n            this.setState({loading:false})\n        })\n\n        console.log(this.props.match.params.userID);\n  }\n\n  finishLoading = () => {\n    //this.setState({loading:false});\n     setTimeout(()=>{this.setState({loading:false})}, 1000)\n  }\n\n  buildList =(data)=>{\n    console.log(JSON.stringify(data), null, '\\n');\n    this.setState({\n        list: data,\n        error: null\n    })\n    this.finishLoading()\n}\n\ngoToUsers = () => {\n  this.props.history.push(\"/users\");\n}\n\n\n  render() {\n    return (\n        <Fragment>\n          <HeaderTodo userRoute={this.goToUsers} header=\"ToDo(s)\"/>\n\n          {this.state.loading && (<h1 className=\"loading\">Loading ToDo(s)...</h1>)}\n\n          {!this.state.loading && !this.props.match.params.userID && (<h1>Please provide a user ID</h1>)}\n          \n          {!this.state.loading && this.props.match.params.userID && (\n            <ul className=\"split list-container\">\n            {this.state.list.map((item) => (\n            <ItemTodo key={item.id} todo={item} userRoute={this.goToUsers}/>\n            ))}\n            </ul>\n          )}\n\n          \n        </Fragment>\n    );\n  }\n}\n\nexport default Todos;","import React, {Component} from 'react';\nimport './ItemTodo.css';\n\nexport default class ItemPost extends Component{\n    render(){\n        return(\n            <li className=\"itemTodo\">\n\n            <div className=\"todo-container\">\n            <h1>{this.props.post.title}</h1>\n            {/* <h1>{this.props.todo.title}</h1> */}\n            <p>{this.props.post.body}</p>\n            {/* <input className={this.state.active?\"input-field\":\"hide\"} defaultValue={this.props.player.name} ref={this.nameRef}></input>\n            <input className={this.state.active?\"input-field\":\"hide\"} defaultValue={this.props.player.position} ref={this.positionRef}></input> */}\n            </div>\n\n            <div className=\"id-container\">\n            <p>UserID: {this.props.post.userId}</p>\n            {/* <button onClick={this.goToHome} className=\"button button-edit\">Home</button>\n            <button onClick={this.waivePlayer} className=\"button button-edit\">Photo</button> */}\n            {/* <button onClick={this.savePlayer} className={this.state.active?\"button button-save\":\"hide\" }>Save</button> */}\n            </div>\n\n            </li>\n\n            \n        )\n    }\n}","import React, { Component, Fragment } from 'react';\nimport \"./Header.css\"\nimport './ListContainer.css'\nimport ItemPost from './ItemPost'\nimport HeaderTodo from './HeaderTodo'\n\nfunction Header() {\n    return(\n        <header className=\"app-header\">\n        <p className=\"backBtn\">Back</p>\n        <h1>React Project - Post(s)</h1>\n        </header>\n    )\n}\n\nclass Posts extends Component {\n  constructor(){\n    super()\n    this.state = {\n      list: [],\n      loading: true,\n      error: null}\n}\n\n  componentDidMount(){\n    let url = `https://jsonplaceholder.typicode.com/posts?userId=${this.props.match.params.userID}`;\n        fetch(url)\n        .then(response => response.json())\n        .then(this.buildList)\n        .catch(err => {\n            this.setState({error:err});\n            this.setState({loading:false})\n        })\n\n        console.log(this.props.match.params.userID);\n  }\n\n  finishLoading = () => {\n    //this.setState({loading:false});\n     setTimeout(()=>{this.setState({loading:false})}, 1000)\n  }\n\n  buildList =(data)=>{\n    console.log(JSON.stringify(data), null, '\\n');\n    this.setState({\n        list: data,\n        error: null\n    })\n    this.finishLoading()\n}\n\ngoToUsers = () => {\n  this.props.history.push(\"/users\");\n}\n\n\n  render() {\n    return (\n        <Fragment>\n          <HeaderTodo userRoute={this.goToUsers} header=\"Posts\"/>\n\n          {this.state.loading && (<h1 className=\"loading\">Loading Post(s)...</h1>)}\n\n          {!this.state.loading && !this.props.match.params.userID && (<h1>Please provide a user ID</h1>)}\n          \n          {!this.state.loading && this.props.match.params.userID && (\n            <ul className=\"split list-container\">\n            {this.state.list.map((item) => (\n            <ItemPost key={item.id} post={item}/>\n            ))}\n            </ul>\n          )}\n\n          \n        </Fragment>\n    );\n  }\n}\n\nexport default Posts;","import React, { Component, Fragment } from 'react';\nimport {BrowserRouter, HashRouter, Switch, Route} from 'react-router-dom';\nimport Users from './components/Users'\nimport NotFound from './components/NotFound'\nimport Todos from './components/ToDos';\nimport Posts from './components/Posts'\n\nclass App extends Component {\n  constructor(){\n    super()\n}\n\n  render() {\n    return (\n        <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Users}/>\n          <Route exact path=\"/users\" component={Users}/>\n          <Route exact path=\"/todos/\" component={Todos}/>\n          <Route path=\"/todos/:userID\" component={Todos}/>\n          <Route exact path=\"/posts/\" component={Posts}/>\n          <Route path=\"/posts/:userID\" component={Posts}/>\n          <Route component={NotFound} />\n        </Switch>\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}